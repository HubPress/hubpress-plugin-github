"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{"default":e}}function getRepositoryInfos(e){var t=_q2["default"].defer();return e.show(function(e,n){e?t.reject(e):t.resolve(n)}),t.promise}function getAuthorizations(e){var t=_q2["default"].defer();return e.list(function(e,n){e?t.reject(e):t.resolve(n)}),t.promise}function getUserInformations(e){return function(t){var n=_q2["default"].defer();return e.show(t,function(e,t){e?n.reject(e):n.resolve(_lodash2["default"].pick(t,["login","id","name","location","blog","avatar_url","bio"]))}),n.promise}}function getTokenNote(e){return(0,_hubpressCoreSlugify2["default"])(e+"-"+_platform2["default"].name+"-"+_platform2["default"].os)}function _searchAndDeleteAuthorization(e,t,n){var o=_q2["default"].defer(),r=-1,i=getTokenNote(e);return t.forEach(function(e){var t=e.note;t===i&&(r=e.id)}),-1!==r?n["delete"](r,function(e,t){e?o.reject(e):o.resolve()}):o.resolve(),o.promise}function _createAuthorization(e,t){var n=_q2["default"].defer(),o={scopes:["public_repo"],note:getTokenNote(e)};return t.create(o,function(e,t){e?n.reject(e):n.resolve(t)}),n.promise}function login(e){console.log("Github Plugin - login",e);var t=_q2["default"].defer(),n=e.data.authentication.credentials,o=e.state.application.config.meta;githubInstance=new _githubApi2["default"]({auth:"basic",username:n.email,password:n.password,twoFactorCode:n.twoFactorCode});var r=githubInstance.getRepo(o.username,o.repositoryName),i=githubInstance.getAuthorization(),a=githubInstance.getUser(),s=void 0,u=void 0;return getRepositoryInfos(r).then(function(e){s=e}).then(getUserInformations(a)).then(function(e){return u=e,getAuthorizations(i)}).then(function(e){return _searchAndDeleteAuthorization(o.repositoryName,e,i)}).then(function(){return _createAuthorization(o.repositoryName,i)}).then(function(e){githubInstance=new _githubApi2["default"]({auth:"oauth",token:e.token}),t.resolve({isAuthenticated:!0,token:e.token,permissions:s.permissions,userInformations:u})})["catch"](function(e){console.error("Github Plugin - login error",e);var n,r={type:"error",title:"Authentication"};if(e.request){var a=e.request.getResponseHeader("X-GitHub-OTP")||"";n="required"===a.split(";")[0]}n?(_createAuthorization(o.repositoryName,i),console.log("Github Plugin - OTP required : ",n),r.type="warning",r.content="A two-factor authentication code is needed.",r.otp=!0,t.resolve({isAuthenticated:!1,twoFactorRequired:!0})):(console.error("Github Plugin - login error",e),t.reject({error:{code:e.error,message:"Unable to authenticate, check your credentials."}}))}),t.promise}function getGithubPostsSha(e,t){var n=_q2["default"].defer();return e.read(t.meta.branch,"",function(e,t){if(e)n.reject(e);else{var o=void 0;t=JSON.parse(t),t.forEach(function(e){"_posts"===e.name&&(o=e.sha)}),n.resolve(o)}}),n.promise}function getPostsGithub(e,t,n){var o=void 0;return n===localStorage.postsSha?o=_q2["default"].fcall(function(){return[]}):!function(){var n=_q2["default"].defer();e.read(t.meta.branch,"_posts",function(e,t){e?n.reject(e):n.resolve(JSON.parse(t))}),o=n.promise}(),o}function markIfPostPublished(e,t){var n=_q2["default"].defer(),o=e.meta,r=githubInstance.getRepo(o.username,o.repositoryName);return r.getSha(e.meta.branch,e.urls.getPostGhPath(t.name),function(e,o){if(e&&404!==e.error)n.reject(e);else{var r=o?1:0,i=Object.assign({},t,{published:r});console.log("markIfPostPublished post",i),n.resolve(i)}}),n.promise}function markIfPostsPublished(e,t,n){var o=_lodash2["default"].compact(n),r=o.map(function(e){return markIfPostPublished(t,e)});return _q2["default"].all(r)}function getPostAuthor(e,t,n){var o=_q2["default"].defer(),r=e.meta,i=githubInstance.getRepo(r.username,r.repositoryName);return console.log("getPostAuthor",t),i.getCommits({sha:e.meta.branch,path:t.original&&t.original.path||t.path},function(e,r){e&&404!==e.error?o.reject(e):!function(){var e=r[r.length-1].author;if(e.login===n.login){e=Object.assign({},n);var i=Object.assign({},t,{author:e});o.resolve(i)}else{var a=githubInstance.getUser();getUserInformations(a)(e.login).then(function(n){e=Object.assign({},n);var r=Object.assign({},t,{author:e});o.resolve(r)})["catch"](function(e){return o.reject(e)})}}()}),o.promise}function getPostsAuthor(e,t,n,o){var r=n.map(function(e){return getPostAuthor(t,e,o)});return _q2["default"].all(r)}function readContent(e,t,n){var o=[];return n.forEach(function(n){var r=_q2["default"].defer();o.push(r.promise),e.read(t.meta.branch,n.path,function(e,t){if(e)r.reject(e);else{var o=void 0;o=Object.assign({},n,{content:t}),r.resolve(o)}})}),_q2["default"].all(o)}function getPosts(e){var t=e.application.config;console.log("Get posts",t);var n=t.meta,o=githubInstance.getRepo(n.username,n.repositoryName);return getGithubPostsSha(o,t).then(function(e){return getPostsGithub(o,t,e)}).then(function(e){return e.map(function(e){return _lodash2["default"].pick(e,["name","path","sha","size"])})}).then(function(e){return markIfPostsPublished(o,t,e)}).then(function(n){return getPostsAuthor(o,t,n,e.authentication.userInformations)}).then(function(e){return readContent(o,t,e)})}function deleteElement(e,t,n){var o=_q2["default"].defer();return e["delete"](t,n,function(e,t){e?o.reject(e):o.resolve(t)}),o.promise}function deletePost(e,t,n){return deleteElement(e,t,n)}function movePostIfNecessary(e,t){var n=e.meta,o=githubInstance.getRepo(n.username,n.repositoryName),r=void 0;return t.original&&t.name!==t.original.name?!function(){var n=_q2["default"].defer();r=n.promise;var i=e.meta.branch,a="_posts/"+t.original.name,s="_posts/"+t.name;o.move(i,a,s,function(r,a){if(r)n.reject(r);else if(t.published){var s=e.urls.getPostGhPath(t.original.name);deletePost(o,i,s).then(function(e){n.resolve({post:t,sha:e})})["catch"](function(e){n.reject(e)}).done()}else n.resolve({post:t,sha:a})})}():r=(0,_q2["default"])({post:t}),r}function writePost(e,t){console.log("Write post",e,t);var n=e.meta,o=githubInstance.getRepo(n.username,n.repositoryName),r=n.branch,i="_posts/"+t.name,a="Update "+t.name,s=_q2["default"].defer();return o.write(r,i,t.content,a,function(n,o){n?s.reject(n):(t.original=_lodash2["default"].omit(t,["original"]),t.original.url=e.urls.getPostUrl(t.original.name),t.original.path="_posts/"+t.original.name,t.original.sha=o,s.resolve(t))}),s.promise}function writeConfig(e){console.log("Write config",e);var t=_q2["default"].defer(),n=e.meta,o=githubInstance.getRepo(n.username,n.repositoryName),r=n.branch;return o.write(r,"hubpress/config.json",JSON.stringify(e,null,2),"Update configuration file",function(e,n){e?t.reject(e):t.resolve(n)}),t.promise}function manageCname(e){console.log("Github manageCname - ",e);var t=e.meta,n=githubInstance.getRepo(t.username,t.repositoryName),o=_q2["default"].defer(),r=function(e,t){e&&"not found"!==e?o.reject(e):o.resolve(t)};return t.cname&&""!==t.cname?(console.info("SettingsService - saveAndPublish save CNAME"),n.write(t.branch,"CNAME",t.cname,"Update CNAME with "+t.cname,r)):(console.info("SettingsService - saveAndPublish delete CNAME"),n["delete"](t.branch,"CNAME",r)),o.promise}function githubPlugin(e){e.on("requestConfig",function(e){return console.info("Github Plugin - requestConfig"),console.log("requestConfig",e),(0,_isomorphicFetch2["default"])("config.json?dt="+Date.now()).then(function(e){return e.json()}).then(function(t){var n=Object.assign({},t,e.data.config);n.theme.name=n.theme.name.toLowerCase();var o=Object.assign({},e.data,{config:n});return Object.assign({},e,{data:o})})}),e.on("requestAuthentication",function(e){return console.info("Github Plugin - requestAuthentication"),console.log("requestAuthentication",e),login(e).then(function(t){var n=Object.assign({},t,e.data.authentication),o=Object.assign({},e.data,{authentication:n});return Object.assign({},e,{data:o})})}),e.on("receiveSavedAuth",function(e){return console.info("Github Plugin - receiveSavedAuth"),console.log("receiveSavedAuth",e),e.data.authentication.isAuthenticated&&(githubInstance=new _githubApi2["default"]({auth:"oauth",token:e.data.authentication.credentials.token})),e}),e.on("requestRemoteSynchronization",function(e){return console.info("Github Plugin - requestRemoteSynchronization"),console.log("requestRemoteSynchronization",e),e.state.authentication.isAuthenticated?getPosts(e.state).then(function(t){var n=Object.assign({},{posts:t},e.data.documents),o=Object.assign({},e.data,{documents:n});return Object.assign({},e,{data:o})}):e}),e.on("requestSaveRemotePost",function(e){console.info("Github Plugin - requestSaveRemotePost"),console.log("requestSaveRemotePost",e);var t=e.state.application.config,n=e.data.post;return movePostIfNecessary(t,n).then(function(e){return writePost(t,e.post)}).then(function(n){return getPostAuthor(t,n,e.state.authentication.userInformations)}).then(function(t){var n=Object.assign({},e.data,{post:t});return Object.assign({},e,{data:n})})}),e.on("requestSaveRemotePublishedElements",function(e){console.info("Github Plugin - requestSaveRemotePublishedElements"),console.log("requestSaveRemotePublishedElements",e);var t=_q2["default"].defer(),n=e.state.application.config.meta,o=githubInstance.getRepo(n.username,n.repositoryName);return o.writeAll(n.branch,e.data.elementsToPublish,function(r,i){r?t.reject(r):o.write(n.branch,".last-sha",i,"Update last sha",function(n,o){n?(console.log(".last-sha",n),t.reject(n)):(console.log(".last-sha done"),t.resolve(e))})}),t.promise}),e.on("requestDeleteRemotePost",function(e){console.info("Github Plugin - requestDeleteRemotePost"),console.log("requestDeleteRemotePost",e);var t=_q2["default"].defer(),n=e.state.application.config,o=n.meta,r=githubInstance.getRepo(o.username,o.repositoryName),i=e.data.post.original.path;return r["delete"](o.branch,i,function(n,o){n?t.reject(n):t.resolve(e)}),t.promise}),e.on("requestDeleteRemotePublishedPost",function(e){console.info("Github Plugin - requestDeleteRemotePublishedPost"),console.log("requestDeleteRemotePublishedPost",e);var t=_q2["default"].defer(),n=e.state.application.config,o=n.meta,r=githubInstance.getRepo(o.username,o.repositoryName),i=n.urls.getPostGhPath(e.data.post.original.name);return r["delete"](o.branch,i,function(n,o){n?t.reject(n):t.resolve(e)}),t.promise}),e.on("requestSaveConfig",function(e){return console.info("Github Plugin - requestSaveConfig"),console.log("requestSaveConfig",e),writeConfig(e.data.config).then(function(t){return manageCname(e.data.config)}).then(function(t){return console.error("mouahahaha",e),e})})}Object.defineProperty(exports,"__esModule",{value:!0}),exports.githubPlugin=githubPlugin;var _platform=require("platform"),_platform2=_interopRequireDefault(_platform),_isomorphicFetch=require("isomorphic-fetch"),_isomorphicFetch2=_interopRequireDefault(_isomorphicFetch),_hubpressCoreSlugify=require("hubpress-core-slugify"),_hubpressCoreSlugify2=_interopRequireDefault(_hubpressCoreSlugify),_githubApi=require("github-api"),_githubApi2=_interopRequireDefault(_githubApi),_q=require("q"),_q2=_interopRequireDefault(_q),_lodash=require("lodash"),_lodash2=_interopRequireDefault(_lodash),githubInstance=void 0;